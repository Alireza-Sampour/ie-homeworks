{"version":3,"sources":["click.wav","RoundSlider.js","5.js","index.js"],"names":["RoundSlider","this","$rsEle","$","refs","roundSlider","options","Object","assign","svgMode","props","nextProps","color","value","startValue","ref","React","Component","Metronome","handleBpmChange","event","bpm","state","playing","clearInterval","timer","setInterval","click","play","setState","startStop","target","blur","Audio","className","sliderType","circleShape","startAngle","lineCap","radius","width","min","max","pathColor","borderWidth","update","onClick","document","title","destination","querySelector","ReactDOM","render"],"mappings":"iMAAe,MAA0B,kC,qCCKnCA,E,uKAEF,WACIC,KAAKC,OAASC,IAAEF,KAAKG,KAAKC,aAC1B,IAAMC,EAAUC,OAAOC,OAAO,CAAEC,SAAS,GAAQR,KAAKS,OACtDT,KAAKC,OAAOG,YAAYC,K,uCAG5B,SAA0BK,GACtB,IAAIC,EAAQD,EAAUE,MAAQF,EAAUG,WAAa,UAAY,UACjEb,KAAKC,OAAOG,YAAY,CACpB,WAAcO,EACd,aAAgBA,IAEhBD,EAAUE,QAAUZ,KAAKS,MAAMG,OAC/BZ,KAAKC,OAAOG,YAAY,SAAU,QAASM,EAAUE,S,oBAI7D,WACI,OACI,qBAAKE,IAAI,oB,GArBKC,IAAMC,WA0BjBjB,ICxBTkB,G,wDACF,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IAUVS,gBAAkB,SAAAC,GACd,IAAMC,EAAMD,EAAMP,MAEd,EAAKS,MAAMC,UACXC,cAAc,EAAKC,OACnB,EAAKA,MAAQC,aAAY,kBAAM,EAAKC,MAAMC,SAAS,GAAKP,EAAO,MAGnE,EAAKQ,SAAS,CAAER,SAnBD,EAsBnBS,UAAY,SAAAV,GACRA,EAAMW,OAAOC,OACT,EAAKV,MAAMC,SACXC,cAAc,EAAKC,OACnB,EAAKI,SAAS,CAAEN,SAAS,MAEzB,EAAKE,MAAQC,aAAY,kBAAM,EAAKC,MAAMC,SAAS,GAAK,EAAKN,MAAMD,IAAO,KAC1E,EAAKQ,SAAS,CAAEN,SAAS,IAAQ,kBAAM,EAAKI,MAAMC,YA1BtD,EAAKN,MAAQ,CACTC,SAAS,EACTF,IAAK,KAGT,EAAKM,MAAQ,IAAIM,MAAMN,GARR,E,0CAiCnB,WACI,OACI,sBAAKO,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CACIC,WAAW,YACXC,YAAY,MACZC,WAAW,MACXC,QAAQ,QACRC,OAAO,MACPC,MAAM,KACNC,IAAI,KACJC,IAAI,MACJC,UAAU,OACVC,YAAY,IACZ9B,WAAW,MACX+B,OAAQ5C,KAAKkB,gBACbN,MAAOZ,KAAKqB,MAAMD,QAG1B,wBAAQa,UAAU,yBAAyBY,QAAS7C,KAAK6B,UAAzD,SAAqE7B,KAAKqB,MAAMC,QAAU,OAAS,iB,GAtD3FP,IAAMC,YA4D9B8B,SAASC,MAAQ,YAEF9B,QChEX+B,EAAcF,SAASG,cAAc,cAEzCC,IAASC,OACL,8BACC,cAAC,EAAD,MAEDH,I","file":"static/js/main.5176be60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/click.07cda4b8.wav\";","import React from 'react';\nimport $ from 'jquery';\nimport 'round-slider';\nimport 'round-slider/dist/roundslider.min.css';\n\nclass RoundSlider extends React.Component {\n\n    componentDidMount() {\n        this.$rsEle = $(this.refs.roundSlider);\n        const options = Object.assign({ svgMode: true }, this.props);\n        this.$rsEle.roundSlider(options);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        var color = nextProps.value > nextProps.startValue ? \"#FF5722\" : \"#8BC34A\";\n        this.$rsEle.roundSlider({\n            \"rangeColor\": color,  \n            \"tooltipColor\": color\n          });\n        if (nextProps.value !== this.props.value) {\n            this.$rsEle.roundSlider(\"option\", \"value\", nextProps.value);\n        }\n    }\n\n    render() {\n        return (\n            <div ref=\"roundSlider\"></div>\n        );\n    }\n};\n\nexport default RoundSlider;","import React from 'react';\nimport click from './click.wav';\nimport RoundSlider from './RoundSlider.js';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nclass Metronome extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            playing: false,\n            bpm: 129    \n        };\n\n        this.click = new Audio(click);\n    }\n\n    handleBpmChange = event => {\n        const bpm = event.value;\n\n        if (this.state.playing) {\n            clearInterval(this.timer);\n            this.timer = setInterval(() => this.click.play(), (60 / bpm) * 1000);\n        }\n\n        this.setState({ bpm });\n    };\n\n    startStop = event => {\n        event.target.blur()\n        if (this.state.playing) {\n            clearInterval(this.timer);\n            this.setState({ playing: false });\n        } else {\n            this.timer = setInterval(() => this.click.play(), (60 / this.state.bpm) * 1000);\n            this.setState({ playing: true }, () => this.click.play());\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"metronome\">\n                <div className=\"bpm-slider\">\n                    <RoundSlider \n                        sliderType=\"min-range\" \n                        circleShape=\"pie\"\n                        startAngle=\"315\"\n                        lineCap=\"round\"\n                        radius=\"130\"\n                        width=\"20\"\n                        min=\"40\"\n                        max=\"218\"\n                        pathColor=\"#eee\"\n                        borderWidth=\"0\"\n                        startValue=\"129\"\n                        update={this.handleBpmChange} \n                        value={this.state.bpm}\n                    />\n                </div>\n                <button className=\"btn btn-lg btn-success\" onClick={this.startStop}>{this.state.playing ? 'Stop' : 'Start'}</button>\n            </div>\n        );\n    }\n}\n\ndocument.title = \"Metronome\"\n\nexport default Metronome;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Question5 from './5.js';\n  \nlet destination = document.querySelector(\"#container\")\n  \nReactDOM.render(\n    <div>\n     <Question5/>\n    </div>,\n    destination\n);\n"],"sourceRoot":""}